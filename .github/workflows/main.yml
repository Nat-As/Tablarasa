name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow psutil pywin32
          pip install -r requirements.txt
        continue-on-error: true
      
      - name: Create icon directory
        run: |
          mkdir -p resources
          # Create a placeholder icon if needed
          if (-not (Test-Path "resources\icon.ico")) {
            echo "Creating placeholder icon..."
            pip install Pillow
            python -c "from PIL import Image, ImageDraw; img = Image.new('RGB', (256, 256), color='#2563eb'); draw = ImageDraw.Draw(img); img.save('resources/icon.ico')"
          }
      
      - name: Build executable
        run: |
          pyinstaller --onefile --windowed --icon=resources/icon.ico --name=TablaRaza main.py
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TablaRaza-Windows
          path: dist/TablaRaza.exe
          
      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/TablaRaza.exe
          token: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow psutil
          pip install -r requirements.txt
        continue-on-error: true
    
      - name: Create ICNS from PNG
        run: |
          mkdir -p resources
          
          # If icon.png exists, convert it to icns
          if [ -f "resources/icon.png" ]; then
            echo "Converting PNG to ICNS..."
            ICONSET="resources/icon.iconset"
            mkdir -p "$ICONSET"
            
            # Generate different sizes
            sips -z 16 16 resources/icon.png --out "$ICONSET/icon_16x16.png"
            sips -z 32 32 resources/icon.png --out "$ICONSET/icon_16x16@2x.png"
            sips -z 32 32 resources/icon.png --out "$ICONSET/icon_32x32.png"
            sips -z 64 64 resources/icon.png --out "$ICONSET/icon_32x32@2x.png"
            sips -z 128 128 resources/icon.png --out "$ICONSET/icon_128x128.png"
            sips -z 256 256 resources/icon.png --out "$ICONSET/icon_128x128@2x.png"
            sips -z 256 256 resources/icon.png --out "$ICONSET/icon_256x256.png"
            sips -z 512 512 resources/icon.png --out "$ICONSET/icon_256x256@2x.png"
            sips -z 512 512 resources/icon.png --out "$ICONSET/icon_512x512.png"
            sips -z 1024 1024 resources/icon.png --out "$ICONSET/icon_512x512@2x.png"
            
            # Create icns
            iconutil -c icns "$ICONSET"
            mv icon.icns resources/icon.icns
            
            # Clean up
            rm -rf "$ICONSET"
          else
            echo "No icon.png found. Creating a default icon..."
            # Create a simple placeholder icon - a blue square
            mkdir -p resources/icon.iconset
            python -c "from PIL import Image, ImageDraw; img = Image.new('RGB', (1024, 1024), color='#2563eb'); draw = ImageDraw.Draw(img); img.save('resources/icon.png')"
            
            # Then generate the iconset
            ICONSET="resources/icon.iconset"
            sips -z 16 16 resources/icon.png --out "$ICONSET/icon_16x16.png"
            sips -z 32 32 resources/icon.png --out "$ICONSET/icon_16x16@2x.png"
            sips -z 32 32 resources/icon.png --out "$ICONSET/icon_32x32.png"
            sips -z 64 64 resources/icon.png --out "$ICONSET/icon_32x32@2x.png"
            sips -z 128 128 resources/icon.png --out "$ICONSET/icon_128x128.png"
            sips -z 256 256 resources/icon.png --out "$ICONSET/icon_128x128@2x.png"
            sips -z 256 256 resources/icon.png --out "$ICONSET/icon_256x256.png"
            sips -z 512 512 resources/icon.png --out "$ICONSET/icon_256x256@2x.png"
            sips -z 512 512 resources/icon.png --out "$ICONSET/icon_512x512.png"
            sips -z 1024 1024 resources/icon.png --out "$ICONSET/icon_512x512@2x.png"
            
            # Create icns
            iconutil -c icns "$ICONSET"
            mv icon.icns resources/icon.icns
            
            # Clean up
            rm -rf "$ICONSET"
          fi
      
      - name: Build executable
        run: |
          ls -la resources/
          pyinstaller --onefile --windowed --icon=resources/icon.icns --name=TablaRaza main.py
          
      - name: Create DMG
        run: |
          mkdir -p dist/dmg
          cp -r "dist/TablaRaza.app" dist/dmg/
          hdiutil create -volname "TablaRaza" -srcfolder dist/dmg -ov -format UDZO dist/TablaRaza-MacOS.dmg
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TablaRaza-MacOS
          path: dist/TablaRaza-MacOS.dmg
          
      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/TablaRaza-MacOS.dmg
          token: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow psutil
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev
          pip install -r requirements.txt
        continue-on-error: true
      
      - name: Create icon directory
        run: |
          mkdir -p resources
          # Create a placeholder icon if needed
          if [ ! -f "resources/icon.png" ]; then
            echo "Creating placeholder icon..."
            pip install Pillow
            python -c "from PIL import Image, ImageDraw; img = Image.new('RGB', (256, 256), color='#2563eb'); draw = ImageDraw.Draw(img); img.save('resources/icon.png')"
          fi
      
      - name: Build executable
        run: |
          pyinstaller --onefile --name=TablaRaza main.py
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: TablaRaza-Linux
          path: dist/TablaRaza
          
      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: dist/TablaRaza
          token: ${{ secrets.GITHUB_TOKEN }}
